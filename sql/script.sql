drop database if exists RPG_telegrambot;
CREATE DATABASE  RPG_telegrambot;
drop schema if exists public cascade;
drop schema if exists  fixed cascade;
CREATE SCHEMA public;
CREATE SCHEMA fixed;

drop table if exists public.party cascade;
drop table if exists public.equipment cascade;
drop table if exists public.inventory_cell cascade;
drop table if exists public.ingame_item cascade;
drop table if exists fixed.solo_activity_reward cascade;
drop table if exists fixed.activity_result_message cascade;
drop table if exists fixed.solo_activity cascade;
drop table if exists fixed.base_item cascade;
drop table if exists fixed.item_types cascade;
drop table if exists public.applied_skill cascade;
drop table if exists public.usr cascade;
drop table if exists fixed.skill_bonus cascade;
drop table if exists fixed.skill cascade;
drop table if exists fixed.class cascade;
drop table if exists public.fight cascade;
drop table if exists public.move cascade;

CREATE TABLE fixed.class (
    id serial PRIMARY KEY,
    name text,
    description text,
    required_level bigint,
    base_class bigint references fixed.class(id)
);

CREATE TABLE fixed.skill (
    id serial PRIMARY KEY,
    name text,
    description text,
    class_id bigint references fixed.class(id),
    passive_points_required bigint
);

CREATE TABLE fixed.skill_bonus (
    skill_bonus_id serial primary key,
    skill_id bigint references fixed.skill(id),
    damage_bonus bigint,
    armor_bonus bigint,
    health_bonus bigint,
    mana_bonus bigint
);
CREATE TABLE fixed.solo_activity (
	id serial PRIMARY KEY,
	name text,
	state_name text,
	description text,
	required_level bigint,
	required_stamina bigint,
	activity_duration bigint
);

CREATE TABLE public.usr (
    chat_id bigint PRIMARY KEY,
    name TEXT,
    level bigint,
    passive_points bigint,
    current_health bigint,
    max_health bigint,
    current_stamina bigint,
    max_stamina bigint,
    current_mana bigint,
    max_mana bigint,
    user_state integer,
    activity_ends TIMESTAMP,
    activity_id bigint references fixed.solo_activity(id),
    stamina_restor TIMESTAMP,
    partner_chat_id bigint references public.usr(chat_id),
    class_id bigint references fixed.class(id),
    gold bigint,
    exp bigint,
    offline_points bigint
);

CREATE TABLE public.applied_skill (
	id serial PRIMARY KEY,
	skill_id bigint references fixed.skill(id),
	user_id bigint references public.usr(chat_id),
	skill_level bigint
);

CREATE TABLE fixed.base_item (
	id serial PRIMARY KEY,
	name text,
	description text,
	damage bigint,
	armor bigint,
	type bigint,
	max_in_stack bigint,
	is_for_sale boolean,
	class_required_id bigint references fixed.class(id) default (1),
	buy_price bigint
);
CREATE TABLE fixed.base_item_craft (
    id serial PRIMARY KEY,
	crafted_base_item_id bigint references fixed.base_item(id),
	material_base_item_id bigint references fixed.base_item(id),
	countOfMaterial bigint
);

CREATE TABLE fixed.solo_activity_reward (
    id serial PRIMARY KEY,
    solo_activity_id bigint references fixed.solo_activity(id),
    gold_reward bigint,
    exp_reward bigint,
    item_reward bigint references fixed.base_item(id),
    result_message text
);

CREATE TABLE public.ingame_item (
	id serial PRIMARY KEY,
	item_id bigint references fixed.base_item(id),
	items_in_stack bigint,
	user_id bigint not null references public.usr(chat_id),
	is_equipped boolean,
	sharpness bigint
);

-- CREATE TABLE public.equipment (
--     equipment_id serial PRIMARY KEY,
-- 	user_id bigint references public.usr(chat_id),
-- 	helmet bigint references public.inventory_cell(item_id),
-- 	chest_armor bigint references public.inventory_cell(item_id),
-- 	leg_armor bigint references public.inventory_cell(item_id),
-- 	boots bigint references public.inventory_cell(item_id),
-- 	left_hand bigint references public.inventory_cell(item_id),
-- 	right_hand bigint references public.inventory_cell(item_id)
-- );

CREATE TABLE public.party (
    party_id serial primary key,
	user_id bigint references public.usr(chat_id),
	name TEXT UNIQUE,
	current_state TEXT
);

CREATE TABLE public.fight (
    id serial primary key,
    user1_id bigint references public.usr(chat_id),
	user2_id bigint references public.usr(chat_id),
	fight_state TEXT
);


CREATE TABLE public.move (
    id serial primary key,
    user_id bigint references public.usr(chat_id),
    fight_id bigint references public.fight(id),
	defense int,
	attack int,
	move_state int,
	hp bigint,
	end_time timestamp,
	num bigint
);



insert into fixed.solo_activity(name, state_name, description, required_level,required_stamina, activity_duration)
values ('–†—É–∏–Ω—ã',
        '–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Ä—É–∏–Ω',
        '–ó–∞–±—Ä–æ—à–µ–Ω—ã–µ —Ä—É–∏–Ω—ã –Ω–µ–¥–∞–ª–µ–∫–æ –æ—Ç –≥–æ—Ä–æ–¥–∞. –ß–µ–≥–æ-—Ç–æ —Ä–µ–¥–∫–æ–≥–æ —Ç–∞–º –Ω–µ –Ω–∞–π–¥–µ—à—å, –Ω–æ –Ω–∞–±–µ—Ä–µ—à—å—Å—è –æ–ø—ã—Ç–∞ –¥–ª—è –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã—Ö –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π –∏, –µ—Å–ª–∏ –ø–æ–≤–µ–∑–µ—Ç, –ø–∞—Ä—É –º–æ–Ω–µ—Ç.',1, 1, 1);

insert into fixed.solo_activity_reward(solo_activity_id, gold_reward, exp_reward, item_reward,result_message) values (1, 2, 3, null,'–¢—ã –ø–æ–±—Ä–æ–¥–∏–ª –ø–æ —Ä—É–∏–Ω–∞–º –ø–∞—Ä—É —á–∞—Å–æ–≤, –±—ã–ª–æ –æ—á–µ–Ω—å —Å–∫—É—á–Ω–æ.');

insert into fixed.class(name, description, required_level, base_class)
    VALUES ('‚öí –†–∞–±–æ—Ç—è–≥–∞', '–û–±—ã—á–Ω—ã–π —Ä–∞–±–æ—Ç—è–≥–∞ –±–µ–∑ –∫–∞–∫–∏—Ö –ª–∏–±–æ –±–æ–Ω—É—Å–æ–≤.', 1, null);
insert into fixed.class(name, description, required_level, base_class)
    VALUES ('‚öî –í–æ–∏–Ω', '–ë–æ–µ—Ü. –£–º–µ–ª–æ –æ–±—Ä–∞—â–∞–µ—Ç—Å—è —Å —Ö–æ–ª–æ–¥–Ω—ã–º –æ—Ä—É–∂–∏–µ–º –≤—Å–µ—Ö –≤–∏–¥–æ–≤.', 7, 1);
insert into fixed.class(name, description, required_level, base_class)
    VALUES ('‚öî –ë–µ—Ä—Å–µ—Ä–∫', '–ñ–∞–¥–Ω—ã–π –¥–æ –∫—Ä–æ–≤–∏ –≤–æ–∏–Ω. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –º–µ–¥–ª–µ–Ω–Ω—ã–µ, –Ω–æ –±–µ—Å–ø–æ—â–∞–¥–Ω—ã–µ –∏ —Å–æ–∫—Ä—É—à–∏—Ç–µ–ª—å–Ω—ã–µ –∞—Ç–∞–∫–∏.', 15, 2);
insert into fixed.class(name, description, required_level, base_class)
    VALUES ('üèπ –†–µ–π–Ω–¥–∂–µ—Ä', '–õ–æ–≤–∫–∏–π —Å—Ç—Ä–∞–Ω–Ω–∏–∫. –í–ª–∞–¥–µ–µ—Ç –Ω–∞–≤—ã–∫–∞–º–∏ —Å—Ç—Ä–µ–ª—å–±—ã –∏–∑ –ª—É–∫–∞ –∏ –≤—Å–µ–≥–¥–∞ –Ω–æ—Å–∏—Ç —Å —Å–æ–±–æ–π –ø–∞—Ä—É –∫–∏–Ω–∂–∞–ª–æ–≤.', 7, 1);


insert into fixed.base_item
    (name, description, damage, armor, type, max_in_stack, buy_price, is_for_sale)
    VALUES ('–î–µ—Ä–µ–≤—è–Ω–Ω—ã–π –º–µ—á', '–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –º–µ—á, –ø–æ–±–µ–¥–∏—Ç—å –∫–æ–≥–æ —Å –Ω–∏–º –Ω–∞—Å—Ç–æ—è—â–∞—è —É–¥–∞—á–∞.', 2, null,0,null, 15,true);
insert into fixed.base_item
    (name, description, damage, armor, type, max_in_stack, buy_price, is_for_sale, class_required_id)
    VALUES ('–°—Ç–∞—Ä—ã–π –∂–µ–ª–µ–∑–Ω—ã–π –º–µ—á', '–°—Ç–∞—Ä—ã–π –∂–µ–ª–µ–∑–Ω—ã–π –º–µ—á, –Ω–µ–º–Ω–æ–≥–æ –æ—Å—Ç—Ä—ã–π.', 2, null,0,null, 15,true,2);
insert into fixed.base_item
    (name, description, damage, armor, type, max_in_stack, buy_price, is_for_sale)
    VALUES ('–î–µ—Ä–µ–≤—è–Ω–Ω—ã–π —â–∏—Ç', '–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π —â–∏—Ç, –ø–æ–±–µ–¥–∏—Ç—å –∫–æ–≥–æ —Å –Ω–∏–º –Ω–∞—Å—Ç–æ—è—â–∞—è —É–¥–∞—á–∞.', null, 2,2,null, 15,true);
insert into fixed.base_item
    (name, description, damage, armor, type, max_in_stack, buy_price, is_for_sale)
    VALUES ('–ö–∞–º–µ–Ω—å', '–û–±—ã—á–Ω—ã–π –∫–∞–º–µ–Ω—å —á—Ç–æ–±—ã —á—Ç–æ —Ç–æ —Å–¥–µ–ª–∞—Ç—å', null, null,8,25, 15,true);
insert into fixed.base_item
    (name, description, damage, armor, type, max_in_stack, buy_price, is_for_sale)
    VALUES ('–ü–∞–ª–∫–∞', '–û–±—ã—á–Ω–∞—è –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è –ø–∞–ª–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤.', null, null,8,25, 15,true);
insert into fixed.base_item
    (name, description, damage, armor, type, max_in_stack, buy_price, is_for_sale)
    VALUES ('–ü–æ—Å–æ—Ö', '–û–±—ã—á–Ω–∞—è –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è –ø–∞–ª–∫–∞ –¥–ª—è —É–±–∏–π—Å—Ç–≤–∞ –ª—é–¥–µ–π.', 1, null,1,null, 25,true);
insert into fixed.base_item
    (name, description, damage, armor, type, max_in_stack, buy_price, is_for_sale)
    VALUES ('–ö–æ–∂–∞–Ω—ã–π —à–ª–µ–º', '.', null, 2,5,null, 15,true);
insert into fixed.base_item
    (name, description, damage, armor, type, max_in_stack, buy_price, is_for_sale)
    VALUES ('–¢–æ—á–∏–ª—å–Ω—ã–π –∫–∞–º–µ–Ω—å', '–° –µ–≥–æ –ø–æ–º–æ—â—å—é –º–æ–∂–Ω–æ –∑–∞—Ç–æ—á–∏—Ç—å –æ—Ä—É–∂–∏–µ –∏–ª–∏ –¥–æ—Å–ø–µ—Ö–∏.', null, null,9,25, 50,true);



insert into public.ingame_item(item_id, items_in_stack, user_id, is_equipped, sharpness)
    VALUES (1,null,651071979,false,0);
insert into public.ingame_item(item_id, items_in_stack, user_id, is_equipped, sharpness)
    VALUES (2,null,1436473525,false,0);
insert into public.ingame_item(item_id, items_in_stack, user_id, is_equipped, sharpness)
    VALUES (3,null,1436473525,false,0);
insert into public.ingame_item(item_id, items_in_stack, user_id, is_equipped, sharpness)
    VALUES (4,1,1436473525,false,null);
insert into public.ingame_item(item_id, items_in_stack, user_id, is_equipped, sharpness)
    VALUES (5,1,1436473525,false,null );
insert into public.ingame_item(item_id, items_in_stack, user_id, is_equipped, sharpness)
    VALUES (6,null,1436473525,false,0);
insert into public.ingame_item(item_id, items_in_stack, user_id, is_equipped, sharpness)
    VALUES (7,null,1436473525,false,0);
insert into public.ingame_item(item_id, items_in_stack, user_id, is_equipped, sharpness)
    VALUES (8,250,935293113,false,null);
insert into public.ingame_item(item_id, items_in_stack, user_id, is_equipped, sharpness)
    VALUES (8,250,1436473525,false,null);